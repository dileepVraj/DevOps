### Difference Between Git and GitHub

| **Feature**               | **Git**                                            | **GitHub**                                        |
|----------------------------|---------------------------------------------------|--------------------------------------------------|
| **What is it?**           | A **version control system** to manage and track changes to code or files on your local computer. | A **cloud-based hosting service** for Git repositories. |
| **Purpose**               | Helps you track changes, collaborate, and manage version history locally. | Provides an online platform for sharing, collaborating, and managing Git repositories. |
| **Where it works**        | On your **local machine** (installed as software). | On the **web** (accessible via browser or API).  |
| **Who owns it?**          | Open-source and maintained by the Git community.   | Owned by **Microsoft** (acquired in 2018).       |
| **Installation**          | Installed via software (e.g., `sudo apt install git` on Linux). | No installation required; accessed through the web or a Git client. |
| **Main Focus**            | Tracks and manages changes to files and codebases locally. | Centralized repository hosting for Git-based projects and collaboration. |
| **Collaboration**         | Collaboration requires manual sharing (e.g., sharing files or pushing to a shared repository). | Enables seamless collaboration with features like **pull requests**, **issues**, and **teams**. |
| **Key Features**          | - Track changes locally<br>- Manage branches<br>- Merge or revert changes<br>- Version control | - Host Git repositories<br>- Share projects publicly or privately<br>- Collaborate on projects<br>- Built-in CI/CD tools with GitHub Actions |
| **Command/Tool Example**  | `git commit`, `git push`, `git branch`             | `git clone https://github.com/user/repo.git`    |

---

### **Analogy** (Simple Story)

1. **Git**: 
   Imagine you’re writing a book on your computer. Git is like a **notebook** you use to write, save drafts, and keep a history of your changes. It’s private, just on your desk.

2. **GitHub**: 
   GitHub is like a **public library** where you can store and share your book with others. People can read, suggest edits, or collaborate with you on the book. GitHub makes your work accessible online.

---

### Key Takeaway:
- **Git** = The tool you use to **track and manage changes** to your code locally.  
- **GitHub** = A **platform** to share and collaborate on Git repositories online.  
You can use Git without GitHub, but GitHub enhances Git’s collaboration features!